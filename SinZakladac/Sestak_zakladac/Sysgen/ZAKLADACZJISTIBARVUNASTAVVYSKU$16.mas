#srcfile 'C:\MOSAICAPP\SINZAKLADAC\SESTAK_ZAKLADAC\ZAKLADACZJISTIBARVUNASTAVVYSKU.CFC'

#defpou zakladacZjistiBarvuNastavVysku
  bool START,
  bool PATRO_NAJITO,
  SR RS_01,
  SR RS_02,
  RS RS_CERVENA,
  RS RS_MODRA,
  R_TRIG R_TRIG_POSUV_V,
  TON TON_01,
  R_TRIG R_TRIG_01,
  RS RS_NAJDI_PATRO,
  TON TON_02,
  TOF TOF_01,
  TON TON_03,
  RS RS_04,
  TON TON_04,
  RS RS_PATRO_NAJITO,
  TON TON_05,
  bool _Tmp_For_Back_Conn_6,
  bool _Tmp_For_Back_Conn_5,
  bool _Tmp_For_Back_Conn_4,
  bool _Tmp_For_Back_Conn_3,
  bool _Tmp_For_Back_Conn_2,
  bool _Tmp_For_Back_Conn_1

 
#srcfile 'C:\MOSAICAPP\SINZAKLADAC\SESTAK_ZAKLADAC\ZAKLADACZJISTIBARVUNASTAVVYSKU.CFC'
#pou zakladacZjistiBarvuNastavVysku
#srcline 1 ;FUNCTION_BLOCK zakladacZjistiBarvuNastavVysku

#struct zakladacZjistiBarvuNastavVysku__temp__
  bool _Nod_Tmp_23,
  bool _Nod_Tmp_17,
  bool _Nod_Tmp_21,
  bool _Nod_Tmp_18,
  bool _Nod_Tmp_7,
  bool _Nod_Tmp_16,
  bool _Nod_Tmp_14,
  bool _Fun_Tmp_IN2_10_2,
  bool _Nod_Tmp_13,
  bool _Nod_Tmp_11,
  bool _Fun_Tmp_IN2_8_2,
  bool _Nod_Tmp_5,
  bool _Nod_Tmp_1
P     61
zakladacZjistiBarvuNastavVysku_L0:
 LINK __SizeOf(zakladacZjistiBarvuNastavVysku__temp__)
; Initialize - dynamic variables
; End initialize - dynamic variables
#srcline 1127 ;(*   4	*)	LD 	START
 LDX  START
#debug bool START
#srcline 1128 ;(* 861	*)	ST	_Nod_Tmp_23
 WRY  _Nod_Tmp_23
#debug_left bool _Nod_Tmp_23
#srcline 1129 ;(*  46	*)	CAL	RS_01(S1:=_Nod_Tmp_23, R:=_Tmp_For_Back_Conn_4)
 LDY  _Nod_Tmp_23
#debug bool _Nod_Tmp_23
 WRX  RS_01~S1
#debug_left bool RS_01~S1
 LDX  _Tmp_For_Back_Conn_4
#debug bool _Tmp_For_Back_Conn_4
 WRX  RS_01~R
#debug_left bool RS_01~R
 LEAX RS_01
 CAL  SR_L0
#srcline 1130 ;(*  46	*)	LD 	RS_01.Q1
 LDX  RS_01~Q1
#debug bool RS_01.Q1
#srcline 1131 ;(* 199	*)	ST	_Nod_Tmp_17
 WRY  _Nod_Tmp_17
#debug_left bool _Nod_Tmp_17
#srcline 1132 ;(* 172	*)	LD 	_Nod_Tmp_17
 LDY  _Nod_Tmp_17
#debug bool _Nod_Tmp_17
#srcline 1133 ;(* 180	*)	OR 	_Tmp_For_Back_Conn_5
 LDX  _Tmp_For_Back_Conn_5
#debug bool _Tmp_For_Back_Conn_5
 OR
#srcline 1134 ;(* 116	*)	ST 	vyber_posuvu
 WR   vyber_posuvu
#debug_left bool vyber_posuvu
#srcline 1135 ;(*  43	*)	LD 	pohybDokoncen_ver
 LD   bool pohybDokoncen_ver
#debug bool pohybDokoncen_ver
#srcline 1136 ;(* 494	*)	ST	_Nod_Tmp_21
 WRY  _Nod_Tmp_21
#debug_left bool _Nod_Tmp_21
#srcline 1137 ;(*1019	*)	CAL	TON_05(IN:=TON_02.Q, PT:=t#500ms)
 LDX  TON_02~Q
#debug bool TON_02.Q
 WRX  TON_05~IN
#debug_left bool TON_05~IN
 LD   time 500
 WRX  TON_05~PT
#debug_left time TON_05~PT
 LEAX TON_05
 CAL  TON_L0
#srcline 1138 ;(* 984	*)	LD 	_Nod_Tmp_21
 LDY  _Nod_Tmp_21
#debug bool _Nod_Tmp_21
#srcline 1139 ;(* 992	*)	AND 	TON_05.Q
 LDX  TON_05~Q
#debug bool TON_05.Q
 AND
#srcline 1140 ;(* 949	*)	ST 	RS_PATRO_NAJITO.S
 WRX  RS_PATRO_NAJITO~S
#debug_left bool RS_PATRO_NAJITO.S
#srcline 1141 ;(* 949	*)	CAL	RS_PATRO_NAJITO(R1:=START)
 LDX  START
#debug bool START
 WRX  RS_PATRO_NAJITO~R1
#debug_left bool RS_PATRO_NAJITO~R1
 LEAX RS_PATRO_NAJITO
 CAL  RS_L0
#srcline 1142 ;(* 949	*)	LD 	RS_PATRO_NAJITO.Q1
 LDX  RS_PATRO_NAJITO~Q1
#debug bool RS_PATRO_NAJITO.Q1
#srcline 1143 ;(*1058	*)	ST 	PATRO_NAJITO
 WRX  PATRO_NAJITO
#debug_left bool PATRO_NAJITO
#srcline 1144 ;(* 212	*)	LDN	_Nod_Tmp_23
 LDY  _Nod_Tmp_23
#debug bool _Nod_Tmp_23
 NEG
#srcline 1145 ;(* 222	*)	AND 	_Nod_Tmp_21
 LDY  _Nod_Tmp_21
#debug bool _Nod_Tmp_21
 AND
#srcline 1146 ;(* 230	*)	AND 	_Tmp_For_Back_Conn_6
 LDX  _Tmp_For_Back_Conn_6
#debug bool _Tmp_For_Back_Conn_6
 AND
#srcline 1147 ;(* 159	*)	ST	_Nod_Tmp_18
 WRY  _Nod_Tmp_18
#debug_left bool _Nod_Tmp_18
#srcline 1148 ;(* 915	*)	CAL	TON_04(IN:=RS_NAJDI_PATRO.Q1, PT:=t#1s)
 LDX  RS_NAJDI_PATRO~Q1
#debug bool RS_NAJDI_PATRO.Q1
 WRX  TON_04~IN
#debug_left bool TON_04~IN
 LD   time 1000
 WRX  TON_04~PT
#debug_left time TON_04~PT
 LEAX TON_04
 CAL  TON_L0
#srcline 1149 ;(* 134	*)	CAL	RS_02(S1:=_Nod_Tmp_18, R:=TON_04.Q)
 LDY  _Nod_Tmp_18
#debug bool _Nod_Tmp_18
 WRX  RS_02~S1
#debug_left bool RS_02~S1
 LDX  TON_04~Q
#debug bool TON_04.Q
 WRX  RS_02~R
#debug_left bool RS_02~R
 LEAX RS_02
 CAL  SR_L0
#srcline 1150 ;(* 134	*)	LD 	RS_02.Q1
 LDX  RS_02~Q1
#debug bool RS_02.Q1
#srcline 1151 ;(* 269	*)	ST	_Nod_Tmp_7
 WRY  _Nod_Tmp_7
#debug_left bool _Nod_Tmp_7
#srcline 1152 ;(* 260	*)	ST 	posuvChapadlo_ver2
 WR   posuvChapadlo_ver2
#debug_left bool posuvChapadlo_ver2
#srcline 1153 ;(* 559	*)	LD 	RS_CERVENA.Q1
 LDX  RS_CERVENA~Q1
#debug bool RS_CERVENA.Q1
#srcline 1154 ;(* 759	*)	ST	_Nod_Tmp_16
 WRY  _Nod_Tmp_16
#debug_left bool _Nod_Tmp_16
#srcline 1155 ;(* 562	*)	LD 	RS_NAJDI_PATRO.Q1
 LDX  RS_NAJDI_PATRO~Q1
#debug bool RS_NAJDI_PATRO.Q1
#srcline 1156 ;(* 624	*)	ST	_Nod_Tmp_14
 WRY  _Nod_Tmp_14
#debug_left bool _Nod_Tmp_14
#srcline 1157 ;(* 569	*)	LD 	_Nod_Tmp_16
 LDY  _Nod_Tmp_16
#debug bool _Nod_Tmp_16
#srcline 1158 ;(* 577	*)	AND 	_Nod_Tmp_14
 LDY  _Nod_Tmp_14
#debug bool _Nod_Tmp_14
 AND
#srcline 1159 ;(* 648	*)	ST 	_Fun_Tmp_IN2_10_2
 WRY  _Fun_Tmp_IN2_10_2
#debug_left bool _Fun_Tmp_IN2_10_2
#srcline 1160 ;(* 633	*)	LD 	RS_MODRA.Q1
 LDX  RS_MODRA~Q1
#debug bool RS_MODRA.Q1
#srcline 1161 ;(* 768	*)	ST	_Nod_Tmp_13
 WRY  _Nod_Tmp_13
#debug_left bool _Nod_Tmp_13
#srcline 1162 ;(* 716	*)	LD 	_Nod_Tmp_14
 LDY  _Nod_Tmp_14
#debug bool _Nod_Tmp_14
#srcline 1163 ;(* 724	*)	ANDN	_Nod_Tmp_16
 LDY  _Nod_Tmp_16
#debug bool _Nod_Tmp_16
 NEG
 AND
#srcline 1164 ;(* 732	*)	ANDN	_Nod_Tmp_13
 LDY  _Nod_Tmp_13
#debug bool _Nod_Tmp_13
 NEG
 AND
#srcline 1165 ;(* 777	*)	ST	_Nod_Tmp_11
 WRY  _Nod_Tmp_11
#debug_left bool _Nod_Tmp_11
#srcline 1166 ;(* 640	*)	LD 	_Nod_Tmp_17
 LDY  _Nod_Tmp_17
#debug bool _Nod_Tmp_17
#srcline 1167 ;(* 648	*)	OR 	_Fun_Tmp_IN2_10_2
 LDY  _Fun_Tmp_IN2_10_2
#debug bool _Fun_Tmp_IN2_10_2
 OR
#srcline 1168 ;(* 656	*)	OR 	_Nod_Tmp_11
 LDY  _Nod_Tmp_11
#debug bool _Nod_Tmp_11
 OR
#srcline 1169 ;(*   7	*)	ST 	motor_ver_0
 WR   motor_ver_0
#debug_left bool motor_ver_0
#srcline 1170 ;(* 599	*)	LD 	_Nod_Tmp_13
 LDY  _Nod_Tmp_13
#debug bool _Nod_Tmp_13
#srcline 1171 ;(* 607	*)	AND 	_Nod_Tmp_14
 LDY  _Nod_Tmp_14
#debug bool _Nod_Tmp_14
 AND
#srcline 1172 ;(* 686	*)	ST 	_Fun_Tmp_IN2_8_2
 WRY  _Fun_Tmp_IN2_8_2
#debug_left bool _Fun_Tmp_IN2_8_2
#srcline 1173 ;(* 678	*)	LD 	_Nod_Tmp_17
 LDY  _Nod_Tmp_17
#debug bool _Nod_Tmp_17
#srcline 1174 ;(* 686	*)	OR 	_Fun_Tmp_IN2_8_2
 LDY  _Fun_Tmp_IN2_8_2
#debug bool _Fun_Tmp_IN2_8_2
 OR
#srcline 1175 ;(* 694	*)	OR 	_Nod_Tmp_11
 LDY  _Nod_Tmp_11
#debug bool _Nod_Tmp_11
 OR
#srcline 1176 ;(*  16	*)	ST 	motor_ver_1
 WR   motor_ver_1
#debug_left bool motor_ver_1
#srcline 1177 ;(* 332	*)	LD 	_Nod_Tmp_7
 LDY  _Nod_Tmp_7
#debug bool _Nod_Tmp_7
#srcline 1178 ;(* 340	*)	AND 	cervenaBarva
 LD   bool cervenaBarva
#debug bool cervenaBarva
 AND
#srcline 1179 ;(* 278	*)	ST 	RS_CERVENA.S
 WRX  RS_CERVENA~S
#debug_left bool RS_CERVENA.S
#srcline 1180 ;(* 410	*)	LD 	RS_PATRO_NAJITO.Q1
 LDX  RS_PATRO_NAJITO~Q1
#debug bool RS_PATRO_NAJITO.Q1
#srcline 1181 ;(* 413	*)	ST	_Nod_Tmp_5
 WRY  _Nod_Tmp_5
#debug_left bool _Nod_Tmp_5
#srcline 1182 ;(* 278	*)	CAL	RS_CERVENA(R1:=_Nod_Tmp_5)
 LDY  _Nod_Tmp_5
#debug bool _Nod_Tmp_5
 WRX  RS_CERVENA~R1
#debug_left bool RS_CERVENA~R1
 LEAX RS_CERVENA
 CAL  RS_L0
#srcline 1183 ;(* 373	*)	LD 	_Nod_Tmp_7
 LDY  _Nod_Tmp_7
#debug bool _Nod_Tmp_7
#srcline 1184 ;(* 381	*)	AND 	modraBarva
 LD   bool modraBarva
#debug bool modraBarva
 AND
#srcline 1185 ;(* 303	*)	ST 	RS_MODRA.S
 WRX  RS_MODRA~S
#debug_left bool RS_MODRA.S
#srcline 1186 ;(* 303	*)	CAL	RS_MODRA(R1:=_Nod_Tmp_5)
 LDY  _Nod_Tmp_5
#debug bool _Nod_Tmp_5
 WRX  RS_MODRA~R1
#debug_left bool RS_MODRA~R1
 LEAX RS_MODRA
 CAL  RS_L0
#srcline 1187 ;(* 251	*)	LD	_Nod_Tmp_17
 LDY  _Nod_Tmp_17
#debug bool _Nod_Tmp_17
#srcline 1188 ;//N001
#srcline 1189 ;(* 230	*)	ST	_Tmp_For_Back_Conn_6
 WRX  _Tmp_For_Back_Conn_6
#debug_left bool _Tmp_For_Back_Conn_6
#srcline 1190 ;//N000
#srcline 1191 ;(* 269	*)	LD	_Nod_Tmp_7
 LDY  _Nod_Tmp_7
#debug bool _Nod_Tmp_7
#srcline 1192 ;//N002
#srcline 1193 ;(* 180	*)	ST	_Tmp_For_Back_Conn_5
 WRX  _Tmp_For_Back_Conn_5
#debug_left bool _Tmp_For_Back_Conn_5
#srcline 1194 ;//N000
#srcline 1195 ;(* 159	*)	LD	_Nod_Tmp_18
 LDY  _Nod_Tmp_18
#debug bool _Nod_Tmp_18
#srcline 1196 ;//N003
#srcline 1197 ;(*  58	*)	ST	_Tmp_For_Back_Conn_4
 WRX  _Tmp_For_Back_Conn_4
#debug_left bool _Tmp_For_Back_Conn_4
#srcline 1198 ;//N000
#srcline 1199 ;(* 852	*)	LD	_Nod_Tmp_17
 LDY  _Nod_Tmp_17
#debug bool _Nod_Tmp_17
#srcline 1200 ;//N004
#srcline 1201 ;(* 824	*)	ST	_Tmp_For_Back_Conn_3
 WRX  _Tmp_For_Back_Conn_3
#debug_left bool _Tmp_For_Back_Conn_3
#srcline 1202 ;//N005
#srcline 1203 ;(* 824	*)	LD 	_Tmp_For_Back_Conn_3
 LDX  _Tmp_For_Back_Conn_3
#debug bool _Tmp_For_Back_Conn_3
#srcline 1204 ;(* 832	*)	OR 	_Tmp_For_Back_Conn_1
 LDX  _Tmp_For_Back_Conn_1
#debug bool _Tmp_For_Back_Conn_1
 OR
#srcline 1205 ;(* 477	*)	ST 	R_TRIG_POSUV_V.CLK
 WRX  R_TRIG_POSUV_V~CLK
#debug_left bool R_TRIG_POSUV_V.CLK
#srcline 1206 ;(* 477	*)	CAL	R_TRIG_POSUV_V()
 LEAX R_TRIG_POSUV_V
 CAL  R_TRIG_L0
#srcline 1207 ;(* 477	*)	LD 	R_TRIG_POSUV_V.Q
 LDX  R_TRIG_POSUV_V~Q
#debug bool R_TRIG_POSUV_V.Q
#srcline 1208 ;(* 125	*)	ST 	zapnout_posuv2
 WR   zapnout_posuv2
#debug_left bool zapnout_posuv2
#srcline 1209 ;//N000
#srcline 1210 ;(* 870	*)	CAL	RS_04(S:=_Nod_Tmp_23, R1:=_Tmp_For_Back_Conn_2)
 LDY  _Nod_Tmp_23
#debug bool _Nod_Tmp_23
 WRX  RS_04~S
#debug_left bool RS_04~S
 LDX  _Tmp_For_Back_Conn_2
#debug bool _Tmp_For_Back_Conn_2
 WRX  RS_04~R1
#debug_left bool RS_04~R1
 LEAX RS_04
 CAL  RS_L0
#srcline 1211 ;(* 503	*)	CAL	TON_01(IN:=RS_04.Q1, PT:=t#700ms)
 LDX  RS_04~Q1
#debug bool RS_04.Q1
 WRX  TON_01~IN
#debug_left bool TON_01~IN
 LD   time 700
 WRX  TON_01~PT
#debug_left time TON_01~PT
 LEAX TON_01
 CAL  TON_L0
#srcline 1212 ;(* 451	*)	LD 	_Nod_Tmp_21
 LDY  _Nod_Tmp_21
#debug bool _Nod_Tmp_21
#srcline 1213 ;(* 459	*)	AND 	TON_01.Q
 LDX  TON_01~Q
#debug bool TON_01.Q
 AND
#srcline 1214 ;(* 539	*)	ST 	R_TRIG_01.CLK
 WRX  R_TRIG_01~CLK
#debug_left bool R_TRIG_01.CLK
#srcline 1215 ;(* 539	*)	CAL	R_TRIG_01()
 LEAX R_TRIG_01
 CAL  R_TRIG_L0
#srcline 1216 ;(* 422	*)	CAL	RS_NAJDI_PATRO(S:=R_TRIG_01.Q, R1:=RS_PATRO_NAJITO.Q1)
 LDX  R_TRIG_01~Q
#debug bool R_TRIG_01.Q
 WRX  RS_NAJDI_PATRO~S
#debug_left bool RS_NAJDI_PATRO~S
 LDX  RS_PATRO_NAJITO~Q1
#debug bool RS_PATRO_NAJITO.Q1
 WRX  RS_NAJDI_PATRO~R1
#debug_left bool RS_NAJDI_PATRO~R1
 LEAX RS_NAJDI_PATRO
 CAL  RS_L0
#srcline 1217 ;(* 422	*)	LD 	RS_NAJDI_PATRO.Q1
 LDX  RS_NAJDI_PATRO~Q1
#debug bool RS_NAJDI_PATRO.Q1
#srcline 1218 ;(* 906	*)	ST	_Nod_Tmp_1
 WRY  _Nod_Tmp_1
#debug_left bool _Nod_Tmp_1
#srcline 1219 ;//N006
#srcline 1220 ;(* 882	*)	ST	_Tmp_For_Back_Conn_2
 WRX  _Tmp_For_Back_Conn_2
#debug_left bool _Tmp_For_Back_Conn_2
#srcline 1221 ;//N000
#srcline 1222 ;(* 786	*)	CAL	TON_02(IN:=_Nod_Tmp_1, PT:=t#1s)
 LDY  _Nod_Tmp_1
#debug bool _Nod_Tmp_1
 WRX  TON_02~IN
#debug_left bool TON_02~IN
 LD   time 1000
 WRX  TON_02~PT
#debug_left time TON_02~PT
 LEAX TON_02
 CAL  TON_L0
#srcline 1223 ;(* 786	*)	LD 	TON_02.Q
 LDX  TON_02~Q
#debug bool TON_02.Q
#srcline 1224 ;//N007
#srcline 1225 ;(* 832	*)	ST	_Tmp_For_Back_Conn_1
 WRX  _Tmp_For_Back_Conn_1
#debug_left bool _Tmp_For_Back_Conn_1
#srcline 1227 ;END_FUNCTION_BLOCK
 ULNK
RET
E     61

; Initialize - variables
P     61
zakladacZjistiBarvuNastavVysku__InstanceInit__:
 LINK 0
 LEAX TOF_01
 CAL  TOF__InstanceInit__
 ULNK
RET
E     61
; End initialize - variables
#endpou 



 

#srcfile ''
