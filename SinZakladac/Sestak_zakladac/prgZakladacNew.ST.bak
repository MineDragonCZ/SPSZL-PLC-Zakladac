PROGRAM prgZakladacNew
  VAR
     zakladac_state : INT := 0;
     zakladac_substate : INT := 0;
     (*
       stavy:
              0: nic - èeká na start
              1: pøesun nad senzor - horizontalne
              2: pøesun do 4. patra
              3: hledání kusu ve 4. patøe -> poukud není: opakovat cyklicky
              4: zvednout kus
              5: pøesun nad senzor - horizontalne
              6: sjetí k senzoru - vertikálnì
              7: save barvy/materiálnu
              8: vybrat patro podle barvy a dojet k nìmu
              9: najít volnou pozici -> pokud není: opakovat cyklicky
             10: pložit kus do pozice
             11: 1 a znovu
     *)
     
     current_slot : INT := 0;
     
     last_scanned_color : INT := -1;
     (*
       stavy:
             -1: zatím nebyla naskenována žádný barva
             0: neznámá
             1: modrá
             2: èervená
             3: støíbrná
             4: zelená
     *)
     
     start : BOOL;
     stop : BOOL;
     pohyb_dokoncen : BOOL;
     
     timer_1 : TON;
     timer_1_done : BOOL;
     timer_2 : TON;
     timer_2_done : BOOL;
     
     intEncoder : zakladacEncodeInt;
  END_VAR

  pohyb_dokoncen := (pohybDokoncen_hor AND pohybDokoncen_ver);
  zhaveniMotoru_hor := 1;
  zhaveniMotoru_ver := 1;
  startMotoru := 0;

  timer_1_done := timer_1.Q;
  IF timer_1_done THEN
    timer_2_done := timer_2.Q;
  END_IF
  timer_1(IN := NOT(timer_1_done), PT := t#500ms);
  timer_2(IN := NOT(timer_2_done), PT := t#1000ms);
  
  IF stop THEN
     zakladac_state := 0;
     zakladac_substate := 0;
  END_IF

  IF pohyb_dokoncen AND timer_1_done THEN
    timer_1_done := false;
    CASE zakladac_state OF
         0:
           IF start AND NOT(stop) THEN
              zakladac_state := 1;
              zakladac_substate := 0;
              RETURN;
           END_IF;
         ;
         1: // reset horizontalne do vychozi pozice
            motor_hor_0 := 0;
            motor_hor_1 := 0;
            motor_hor_2 := 0;
            motor_hor_3 := 0;
            vyberMotoru := 0;
            startMotoru := 1;
            current_slot := 5;
            zakladac_state := 2;
            
            // reset celisti - otevøení a posun nahoru
            celistiChapadlo := 0;
            posuvChapadlo_ver := 0;
         ;
         2: // reset vertikalne do vychozi pozice
            motor_ver_0 := 0;
            motor_ver_1 := 0;
            motor_ver_2 := 0;
            motor_ver_3 := 0;
            vyberMotoru := 1;
            startMotoru := 1;
            zakladac_state := 3;
         ;
         
         3:
            IF materialJe THEN
               zakladac_state := 4;
               zakladac_substate := 0;
            ELSE
              IF current_slot > 5 THEN
                 current_slot := 0;
              ELSE
                 current_slot := current_slot + 1;
              END_IF
              zakladac_state := 3;
            END_IF
            intEncoder(inputInt := current_slot,
                                out0 => motor_hor_0 := out0,
                                out1 => motor_hor_1 := out1,
                                out2 => motor_hor_2 := out2,
                                out3 => motor_hor_3 := out3
            );
            vyberMotoru := 0;
            startMotoru := 1;
         ;
         4:
            IF timer_2_done THEN
              timer_2_done := false;
              CASE zakladac_substate OF
                   0:
                    celistiChapadlo := 0;
                    posuvChapadlo_ver := 1;
                    zakladac_substate := 1;
                   1:
                    celistiChapadlo := 1;
                    posuvChapadlo_ver := 0;
                    zakladac_substate := 0;
                    zakladac_state := 5;
              END_CASE
            END_IF
         ;
         5:
            motor_hor_0 := 0;
            motor_hor_1 := 0;
            motor_hor_2 := 0;
            motor_hor_3 := 0;
            vyberMotoru := 0;
            startMotoru := 1;
            current_slot := 5;
            zakladac_state := 6;
         ;
         6:
            motor_ver_0 := 0;
            motor_ver_1 := 0;
            motor_ver_2 := 1;
            motor_ver_3 := 0;
            vyberMotoru := 1;
            startMotoru := 1;
            zakladac_state := 7;
            zakladac_substate := 0;
         ;
         7:
            IF timer_2_done THEN
              timer_2_done := false;
              CASE zakladac_substate OF
                   0: // posun dolu k èidlu
                      posuvChapadlo_ver := 1;
                      zakladac_substate := 1;
                      last_scanned_color := -1;
                   1: // wait 2 seconds
                      zakladac_substate := 2;
                   2: // sken barvy
                      IF modraBarva THEN
                         last_scanned_color := 1;
                      ELSE IF cervenaBarva THEN
                         last_scanned_color := 2;
                      ELSE IF stribrnaBarva THEN
                         last_scanned_color := 3;
                      ELSE IF zelenaBarva THEN
                         last_scanned_color := 4;
                      ELSE
                         last_scanned_color := 0;
                      END_IF
                      zakladac_substate := 3;
                   3: // posun zpet nahoru od èidla
                      posuvChapadlo_ver := 0;
                      zakladac_substate := 0;
                      zakladac_state := 8;
              END_CASE
            END_IF
         ;
         8: // TODO: Setup address by color
            motor_ver_0 := 1;
            motor_ver_1 := 1;
            motor_ver_2 := 1;
            motor_ver_3 := 1;
            vyberMotoru := 1;
            startMotoru := 1;
            zakladac_state := 9;
         ;
         9:
            IF NOT(materialJe) AND NOT(current_slot = 5) THEN
               zakladac_state := 10;
               zakladac_substate := 0;
            ELSE
              IF current_slot > 5 THEN
                 current_slot := 0;
              ELSE
                 current_slot := current_slot + 1;
              END_IF
              zakladac_state := 9;
            END_IF
            intEncoder(inputInt := current_slot,
                                out0 => motor_hor_0 := out0,
                                out1 => motor_hor_1 := out1,
                                out2 => motor_hor_2 := out2,
                                out3 => motor_hor_3 := out3
            );
            vyberMotoru := 0;
            startMotoru := 1;
         ;
         10:
            IF timer_2_done THEN
              timer_2_done := false;
              CASE zakladac_substate OF
                   0:
                    celistiChapadlo := 1;
                    posuvChapadlo_ver := 1;
                    zakladac_substate := 1;
                   1:
                    celistiChapadlo := 0;
                    posuvChapadlo_ver := 0;
                    zakladac_substate := 0;
                    zakladac_state := 1;
              END_CASE
            END_IF
         ;
    END_CASE;
  END_IF
END_PROGRAM

